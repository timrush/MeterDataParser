/*
 * This file is generated by jOOQ.
*/
package com.dsd.db;


import com.dsd.db.tables.Device;
import com.dsd.db.tables.Deviceevents;
import com.dsd.db.tables.Intervalreads;
import com.dsd.db.tables.Registerreads;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Meterdatastore extends SchemaImpl {

    private static final long serialVersionUID = 622041164;

    /**
     * The reference instance of <code>MeterDataStore</code>
     */
    public static final Meterdatastore METERDATASTORE = new Meterdatastore();

    /**
     * The table <code>MeterDataStore.device</code>.
     */
    public final Device DEVICE = com.dsd.db.tables.Device.DEVICE;

    /**
     * The table <code>MeterDataStore.deviceEvents</code>.
     */
    public final Deviceevents DEVICEEVENTS = com.dsd.db.tables.Deviceevents.DEVICEEVENTS;

    /**
     * The table <code>MeterDataStore.IntervalReads</code>.
     */
    public final Intervalreads INTERVALREADS = com.dsd.db.tables.Intervalreads.INTERVALREADS;

    /**
     * The table <code>MeterDataStore.RegisterReads</code>.
     */
    public final Registerreads REGISTERREADS = com.dsd.db.tables.Registerreads.REGISTERREADS;

    /**
     * No further instances allowed
     */
    private Meterdatastore() {
        super("MeterDataStore", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Device.DEVICE,
            Deviceevents.DEVICEEVENTS,
            Intervalreads.INTERVALREADS,
            Registerreads.REGISTERREADS);
    }
}
